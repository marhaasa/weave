#!/usr/bin/env node
// Weave CLI wrapper
// This file serves as the entry point when installed via npm or Homebrew
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import { readFileSync } from 'fs';
import { createRequire } from 'module';

// Get __dirname equivalent in ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Handle command line arguments
const args = process.argv.slice(2);

if (args.includes('--help') || args.includes('-h')) {
  console.log(`
Weave - An interactive TUI for Microsoft Fabric CLI

Usage: weave [options]

Options:
  -h, --help     Show this help message
  -v, --version  Show version information

Navigation:
  ↑/↓            Navigate through options
  Enter          Select an option
  q/ESC          Go back or quit
  r              Refresh (in workspace view)

For more information, visit: https://github.com/marhaasa/weave
`);
  process.exit(0);
}

if (args.includes('--version') || args.includes('-v')) {
  try {
    const packagePath = join(__dirname, '..', 'package.json');
    const packageJson = JSON.parse(readFileSync(packagePath, 'utf8'));
    console.log(`weave v${packageJson.version}`);
  } catch (err) {
    console.log('weave v0.1.5');
  }
  process.exit(0);
}

// Handle different installation scenarios
async function loadWeave() {
  try {
    // Try to load from parent directory dist folder (normal case after build)
    await import(join(__dirname, '..', 'dist', 'index.js'));
  } catch (err) {
    try {
      // If that fails, try the development version (running with tsx)
      await import(join(__dirname, '..', 'src', 'index.tsx'));
    } catch (err2) {
      try {
        // Fallback: try current directory
        await import(join(__dirname, 'index.js'));
      } catch (err3) {
        console.error('Error: Could not find index.js or src/index.tsx');
        console.error('Please ensure the package is built correctly.');
        console.error('Run "npm run build" to compile TypeScript files.');
        process.exit(1);
      }
    }
  }
}

// Load and run weave
loadWeave().catch(err => {
  console.error('Error loading weave:', err.message);
  process.exit(1);
});
